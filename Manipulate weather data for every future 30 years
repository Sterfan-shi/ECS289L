{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1SWsqGOE8z1x15MYUe1DPc42dSomNbmiM","authorship_tag":"ABX9TyOr9sw7SMUQp2OPCwGyV6dZ"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":121,"metadata":{"id":"YT2fTmL6xNuz","executionInfo":{"status":"ok","timestamp":1684792592346,"user_tz":420,"elapsed":449,"user":{"displayName":"石一锋","userId":"11386838646588379464"}}},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","import random"]},{"cell_type":"code","source":["def read_met_file(path):\n","  df = pd.read_csv(path, sep=\" \", skiprows=13, header=None )\n","  df.columns = [\"year\", \"day\", \"radiation\", \"maxt\",\"mint\",\"rain\"]\n","  return df\n","\n","## calculate the total and average temperature/rain for data in current dataframe\n","def check_temp_and_rain(df):\n","  mint_sum = df['mint'].sum()\n","  maxt_sum = df['maxt'].sum()\n","\n","  # (mint+maxt)/ number of records/2\n","  avgt=(mint_sum+maxt_sum)/2/len(df.index)\n","  \n","  sum_rain = df['rain'].sum()\n","  avg_rain = sum_rain/len(df.index)\n","\n","  return mint_sum,maxt_sum,avgt,sum_rain,avg_rain\n","\n","day_mapping={\n","    1:31,\n","    2:-1,\n","    3:31,\n","    4:30,\n","    5:31,\n","    6:30,\n","    7:31,\n","    8:31,\n","    9:30,\n","    10:31,\n","    11:30,\n","    12:31\n","}\n","\n","def is_leap_year (year):\n","  return (year % 4 == 0) and (year % 100 != 0) or (year % 400 == 0)\n","\n","def days_of_feb(year):\n","  if is_leap_year(year):\n","    return 29\n","  else:\n","    return 28\n","\n","def calculate_amp(df):\n","  year_meant=[]\n","  min_year = df['year'].min()\n","  max_year = df['year'].max()+1\n","  #highest mean temperature of a month\n","  for i in range(min_year,max_year,1):\n","    df_year = df.loc[df['year'] == i]\n","    accessed =0\n","    meants=[]\n","    for mon in range(1,13,1):\n","      day_count = 0\n","      if(mon==2):\n","        day_count = days_of_feb(i)\n","      else:\n","        day_count = day_mapping[mon]\n","      \n","      df_month = df_year.loc[(df_year[\"day\"]>accessed) & (df_year[\"day\"]<=accessed+day_count)]\n","      # calculate mean maxt\n","      sum_maxt= df_month[\"maxt\"].sum()\n","      # calculate mean mint\n","      sum_mint= df_month[\"mint\"].sum()\n","      mean_t = (sum_maxt+sum_mint)/2/len(df_month.index)\n","      meants.append(mean_t)\n","\n","      accessed+=day_count\n","    len(meants)\n","    mmax =0\n","    for e in meants:\n","      if e> mmax:\n","        mmax=e\n","    mmin =40000\n","    for e in meants:\n","      if e< mmin:\n","        mmin=e\n","    year_meant.append(mmax-mmin)\n","\n","  #lowest mean temperature of a month\n","  tt=0\n","  for e in year_meant:\n","    tt=tt+e\n","\n","  return tt/len(year_meant)\n","\n","\n","\n","# def supplement_1980(df):\n","#   ## get deviations of 1981\n","#   df_1981 = df.loc[df['year'] == 1981]\n","#   # temperature\n","#   mint_sum_1981 = df_1981['mint'].sum()\n","#   maxt_sum_1981 = df_1981['maxt'].sum()\n","#   # (mint+maxt)/ number of records/2\n","#   annualt_avg_1981=(mint_sum_1981+maxt_sum_1981)/2/len(df_1981.index)\n","#   avg_min_factor=-0.84\n","#   avg_max_factor=1.12\n","#   ### mean temperature of 1980\n","#   annualt_avg_1980 =random.uniform(avg_min_factor+avgt,avg_max_factor+avgt)\n","#   deviation_t = annualt_avg_1980 - annualt_avg_1981\n","\n","#   # rain\n","#   sum_rain_1981 = df_1981['rain'].sum()\n","#   avg_rain_1981 = sum_rain_1981/len(df_1981.index)\n","\n","#   ### for data in 1980 and add randomized modify daily rain\n","#   avg_min_rain_factor=-0.42\n","#   avg_max_rain_factor=0.53\n","#   ### mean temperature of 1980\n","#   annual_avg_rain_1980 =random.uniform(avg_min_rain_factor+avg_rain_1981,avg_max_rain_factor+avg_rain_1981)\n","#   deviation_rain = annual_avg_rain_1980 - avg_rain_1981\n","\n","  \n","#   random_rain_factors=[-0.42,0.42]\n","#   random_t_factors=[-2.22,-0.86,0.86,2.22]\n","\n","#   ###### loop data for 1980 and randomized modify daily max/min temperature and rain\n","#   data2 = []\n","\n","#   for index, row in df_1981.iterrows():\n","#     r= random_t_factors[random.randrange(4)]\n","#     # mint\n","#     temp_mint= row[\"mint\"]+deviation_t+r\n","#     #temp_mint= random.uniform(avg_min_factor+row[\"mint\"]+deviation_t,avg_max_factor+row[\"mint\"]+deviation_t)\n","#     # maxt\n","#     temp_maxt=row[\"maxt\"]+deviation_t+r\n","\n","#     # rain\n","#     temp_rain = 0\n","#     if row[\"rain\"]>0:\n","#       temp_rain = row[\"rain\"]+ deviation_rain+random_rain_factors[random.randrange(2)]\n","#       if temp_rain < 0:\n","#         temp_rain = 0\n","\n","#     data2.append([1980,row[\"day\"],row[\"radiation\"],temp_maxt,temp_mint,temp_rain])\n","\n","#   df_1980 = pd.DataFrame(data2,columns=[\"year\",\"day\",\"radiation\",\"maxt\",\"mint\",\"rain\"])\n","#   df_1980.day = df_1980.day.astype(int)\n","\n","#   df_merged = pd.concat([df, df_1980], ignore_index=False, sort=True)\n","#   df_merged = df_merged[[\"year\",\"day\",\"radiation\",\"maxt\",\"mint\",\"rain\"]]\n","#   df_merged=df_merged.sort_values(['year','year'],ascending=[True,True])\n","\n","#   return df_merged\n","\n","\n","source_path=\"/content/drive/MyDrive/colab_notebooks/ECS_289L/1981_2010/\""],"metadata":{"id":"jdtXcLxJHNpr","executionInfo":{"status":"ok","timestamp":1684792609760,"user_tz":420,"elapsed":305,"user":{"displayName":"石一锋","userId":"11386838646588379464"}}},"execution_count":123,"outputs":[]},{"cell_type":"code","source":["###################### generate data for 2011-2040,2041-2070,2071-2100\n","######### RCP\n","rcp = \"4.5\"\n","\n","coordinates=[\"-17.6-30.8\",\n","\"-17.6-31.3\",\n","\"-17.6-31.8\",\n","\"-17.6-32.3\",\n","\"-17.6-32.8\",\n","\"-18.1-30.8\",\n","\"-18.1-31.3\",\n","\"-18.1-31.8\",\n","\"-18.1-32.3\",\n","\"-18.1-32.8\",\n","\"-18.6-30.8\",\n","\"-18.6-31.3\",\n","\"-18.6-31.8\",\n","\"-18.6-32.3\",\n","\"-18.6-32.8\",\n","\"-19.1-30.8\",\n","\"-19.1-31.3\",\n","\"-19.1-31.8\",\n","\"-19.1-32.3\",\n","\"-19.1-32.8\"]\n","\n","t_mapping_rcp45={}\n","t_mapping_rcp85={}\n","\n","rain_mapping_rcp45={}\n","rain_mapping_rcp85={}\n","\n","\n","\n","# for temperature\n","future_df = pd.read_csv(source_path+\"t.csv\", sep=\",\",header=None)\n","future_df.columns = [\"a\", \"b\", \"c\", \"d\",\"e\",\"f\"]\n","\n","\n","for index, row in future_df.iterrows():\n","  cor = coordinates[index]\n","  # rcp 4.5 data\n","  rcp45 = {cor:{\"2011_2040\":row[\"a\"],\"2041_2070\":row[\"b\"],\"2071_2100\":row[\"c\"]}}\n","  rcp85 = {cor:{\"2011_2040\":row[\"d\"],\"2041_2070\":row[\"e\"],\"2071_2100\":row[\"f\"]}}\n","  \n","  t_mapping_rcp45.update(rcp45)\n","  t_mapping_rcp85.update(rcp85)\n","\n","# for rainfall\n","\n","future_rain_df = pd.read_csv(source_path+\"rain.csv\", sep=\",\",header=None)\n","future_rain_df.columns = [\"a\", \"b\", \"c\", \"d\",\"e\",\"f\"]\n","for index, row in future_rain_df.iterrows():\n","  cor = coordinates[index]\n","  # rcp 4.5 data\n","  rcp45 = {cor:{\"2011_2040\":row[\"a\"],\"2041_2070\":row[\"b\"],\"2071_2100\":row[\"c\"]}}\n","  rcp85 = {cor:{\"2011_2040\":row[\"d\"],\"2041_2070\":row[\"e\"],\"2071_2100\":row[\"f\"]}}\n","  \n","  rain_mapping_rcp45.update(rcp45)\n","  rain_mapping_rcp85.update(rcp85)\n","\n","\n","\n","def get_month_key(idx):\n","  if(idx<=29):\n","    return \"2011_2040\"\n","  elif(idx<=59):\n","    return \"2041_2070\"\n","  else:\n","    return \"2071_2100\"\n","\n"],"metadata":{"id":"Vf5WtzTSPcPf","executionInfo":{"status":"ok","timestamp":1684792613111,"user_tz":420,"elapsed":1,"user":{"displayName":"石一锋","userId":"11386838646588379464"}}},"execution_count":124,"outputs":[]},{"cell_type":"code","source":["############# generate next 30 year's weather\n"],"metadata":{"id":"J8D1MWA1dPGV"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Read a .met file for a specific coordinates"],"metadata":{"id":"kAYZ2C_0xfGE"}},{"cell_type":"code","source":["file_coordinates=\"-19.1-32.8\"\n","\n","path = source_path+file_coordinates+\".met\"\n","df = read_met_file(path)\n","\n","\n","#######df = supplement_1980(df)\n","\n","df\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"CxQCxfbmxeBX","executionInfo":{"status":"ok","timestamp":1684803818608,"user_tz":420,"elapsed":586,"user":{"displayName":"石一锋","userId":"11386838646588379464"}},"outputId":"5e897049-154d-4749-a060-33b55429bb53"},"execution_count":258,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       year  day  radiation  maxt  mint  rain\n","0      1981    1        0.0  26.3  16.1   0.7\n","1      1981    2        0.0  27.8  16.5   3.1\n","2      1981    3        0.0  28.1  17.6   6.2\n","3      1981    4        0.0  28.3  18.5   4.1\n","4      1981    5        0.0  29.0  16.8   3.4\n","...     ...  ...        ...   ...   ...   ...\n","10952  2010  361       19.5  25.1  15.7   8.3\n","10953  2010  362       26.1  26.5  16.1   7.4\n","10954  2010  363       21.7  25.7  17.6   7.9\n","10955  2010  364       22.0  25.5  18.4   6.7\n","10956  2010  365       25.1  25.5  17.7  11.0\n","\n","[10957 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-9403093a-7b07-415b-9c25-e19292538eba\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year</th>\n","      <th>day</th>\n","      <th>radiation</th>\n","      <th>maxt</th>\n","      <th>mint</th>\n","      <th>rain</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1981</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>26.3</td>\n","      <td>16.1</td>\n","      <td>0.7</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1981</td>\n","      <td>2</td>\n","      <td>0.0</td>\n","      <td>27.8</td>\n","      <td>16.5</td>\n","      <td>3.1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1981</td>\n","      <td>3</td>\n","      <td>0.0</td>\n","      <td>28.1</td>\n","      <td>17.6</td>\n","      <td>6.2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1981</td>\n","      <td>4</td>\n","      <td>0.0</td>\n","      <td>28.3</td>\n","      <td>18.5</td>\n","      <td>4.1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1981</td>\n","      <td>5</td>\n","      <td>0.0</td>\n","      <td>29.0</td>\n","      <td>16.8</td>\n","      <td>3.4</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>10952</th>\n","      <td>2010</td>\n","      <td>361</td>\n","      <td>19.5</td>\n","      <td>25.1</td>\n","      <td>15.7</td>\n","      <td>8.3</td>\n","    </tr>\n","    <tr>\n","      <th>10953</th>\n","      <td>2010</td>\n","      <td>362</td>\n","      <td>26.1</td>\n","      <td>26.5</td>\n","      <td>16.1</td>\n","      <td>7.4</td>\n","    </tr>\n","    <tr>\n","      <th>10954</th>\n","      <td>2010</td>\n","      <td>363</td>\n","      <td>21.7</td>\n","      <td>25.7</td>\n","      <td>17.6</td>\n","      <td>7.9</td>\n","    </tr>\n","    <tr>\n","      <th>10955</th>\n","      <td>2010</td>\n","      <td>364</td>\n","      <td>22.0</td>\n","      <td>25.5</td>\n","      <td>18.4</td>\n","      <td>6.7</td>\n","    </tr>\n","    <tr>\n","      <th>10956</th>\n","      <td>2010</td>\n","      <td>365</td>\n","      <td>25.1</td>\n","      <td>25.5</td>\n","      <td>17.7</td>\n","      <td>11.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>10957 rows × 6 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9403093a-7b07-415b-9c25-e19292538eba')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-9403093a-7b07-415b-9c25-e19292538eba button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-9403093a-7b07-415b-9c25-e19292538eba');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":258}]},{"cell_type":"code","source":["future_random_t_factors=[-0.22,-0.36,-0.41,0.41,0.36,0.22]\n","future_random_rain_factors=[-0.76,-0.65,-0.67,-0.12,0.76,0.37]\n","\n","###### define a function to generate 2011 to 2100\n","def generate_future_weather(df):\n","  data=[]\n","  #### first loop for 2011-2040\n","  rcp45_avg_t_11_40 = t_mapping_rcp45[file_coordinates][get_month_key(0)]\n","  rcp45_avg_rain_11_40 = rain_mapping_rcp45[file_coordinates][get_month_key(0)]/364\n","  print(\"rcp45_avg_rain=\",rcp45_avg_rain_11_40)\n","  for index, row in df.iterrows():\n","    current_year = row[\"year\"]+30\n","    avgt,avg_rain = get_avg_weather_rain(df,row[\"year\"])\n","    deviation_t = rcp45_avg_t_11_40 - avgt\n","    deviation_rain = rcp45_avg_rain_11_40 - avg_rain\n","    r= future_random_t_factors[random.randrange(6)]\n","    # mint\n","    temp_mint= row[\"mint\"]+deviation_t+r\n","    #temp_mint= random.uniform(avg_min_factor+row[\"mint\"]+deviation_t,avg_max_factor+row[\"mint\"]+deviation_t)\n","    # maxt\n","    temp_maxt=row[\"maxt\"]+deviation_t+r\n","\n","    # rain\n","    temp_rain = 0\n","    #if row[\"rain\"]>0:\n","    rain_d = 0\n","    if deviation_rain<0:\n","      rain_d = 2.98597\n","    else:\n","      rain_d = 1.5398\n","    temp_rain = rain_d*deviation_rain+row[\"rain\"]+ future_random_rain_factors[random.randrange(6)]\n","    if temp_rain < 0:\n","      temp_rain = 0\n","\n","    data.append([current_year,row[\"day\"],row[\"radiation\"],temp_maxt,temp_mint,temp_rain])\n","\n","\n","\n","  #### second loop for 2041-2070\n","  rcp45_avg_t_41_70 = t_mapping_rcp45[file_coordinates][get_month_key(30)]\n","  rcp45_avg_rain_41_70 = rain_mapping_rcp45[file_coordinates][get_month_key(30)]/364\n","  print(\"rcp45_avg_rain=\",rcp45_avg_rain_41_70)\n","  for index, row in df.iterrows():\n","    current_year = row[\"year\"]+60\n","    avgt,avg_rain = get_avg_weather_rain(df,row[\"year\"])\n","    deviation_t = rcp45_avg_t_41_70 - avgt\n","    deviation_rain = rcp45_avg_rain_41_70 - avg_rain\n","    r= future_random_t_factors[random.randrange(6)]\n","    # mint\n","    temp_mint= row[\"mint\"]+deviation_t+r\n","    #temp_mint= random.uniform(avg_min_factor+row[\"mint\"]+deviation_t,avg_max_factor+row[\"mint\"]+deviation_t)\n","    # maxt\n","    temp_maxt=row[\"maxt\"]+deviation_t+r\n","\n","    # rain\n","    temp_rain = 0\n","    #if row[\"rain\"]>0:\n","    rain_d = 0\n","    if deviation_rain<0:\n","      rain_d = 2.91597\n","    else:\n","      rain_d = 1.4498\n","    temp_rain = rain_d*deviation_rain+row[\"rain\"]+ future_random_rain_factors[random.randrange(6)]\n","    if temp_rain < 0:\n","      temp_rain = 0\n","\n","    data.append([current_year,row[\"day\"],row[\"radiation\"],temp_maxt,temp_mint,temp_rain])\n","  #### theird loop for 2071-2100\n","  rcp45_avg_t_71_10 = t_mapping_rcp45[file_coordinates][get_month_key(61)]\n","  rcp45_avg_rain_71_10 = rain_mapping_rcp45[file_coordinates][get_month_key(61)]/364\n","  print(\"rcp45_avg_rain=\",rcp45_avg_rain_71_10)\n","  for index, row in df.iterrows():\n","    current_year = row[\"year\"]+90\n","    avgt,avg_rain = get_avg_weather_rain(df,row[\"year\"])\n","    deviation_t = rcp45_avg_t_71_10 - avgt\n","    deviation_rain = rcp45_avg_rain_71_10 - avg_rain\n","    r= future_random_t_factors[random.randrange(6)]\n","    # mint\n","    temp_mint= row[\"mint\"]+deviation_t+r\n","    #temp_mint= random.uniform(avg_min_factor+row[\"mint\"]+deviation_t,avg_max_factor+row[\"mint\"]+deviation_t)\n","    # maxt\n","    temp_maxt=row[\"maxt\"]+deviation_t+r\n","\n","    # rain\n","    temp_rain = 0\n","    #if row[\"rain\"]>0:\n","    rain_d = 0\n","    if deviation_rain<0:\n","      rain_d = 2.9897\n","    else:\n","      rain_d = 1.5498\n","    temp_rain = rain_d*deviation_rain+row[\"rain\"]+ future_random_rain_factors[random.randrange(6)]\n","    if temp_rain < 0:\n","      temp_rain = 0\n","\n","    data.append([current_year,row[\"day\"],row[\"radiation\"],temp_maxt,temp_mint,temp_rain])\n","\n","\n","  ###generate dataframe\n","  df_ffuture = pd.DataFrame(data,columns=[\"year\",\"day\",\"radiation\",\"maxt\",\"mint\",\"rain\"])\n","  df_ffuture.day = df_ffuture.day.astype(int)\n","  df_ffuture.year = df_ffuture.year.astype(int)\n","\n","  return df_ffuture\n","\n","\n","def get_avg_weather_rain(df,year):\n","  df= df.loc[df['year'] == year]\n","  mint_sum = df['mint'].sum()\n","  maxt_sum = df['maxt'].sum()\n","\n","  # (mint+maxt)/ number of records/2\n","  avgt=(mint_sum+maxt_sum)/2/len(df.index)\n","  \n","  sum_rain = df['rain'].sum()\n","  avg_rain = sum_rain/len(df.index)\n","\n","  return avgt,avg_rain\n","\n","\n","def get_avg_weather_rain_range(df,start_year,end_year):\n","  df= df.loc[(df['year'] >= start_year) &(df['year'] <= end_year)]\n","  mint_sum = df['mint'].sum()\n","  maxt_sum = df['maxt'].sum()\n","\n","  # (mint+maxt)/ number of records/2\n","  avgt=(mint_sum+maxt_sum)/2/len(df.index)\n","  \n","  sum_rain = df['rain'].sum()\n","  avg_rain = sum_rain/len(df.index)\n","\n","  return avgt,avg_rain\n","\n","df_new=generate_future_weather(df)\n","df_new = df_new.round({'maxt': 1, 'mint': 1,'rain':1})\n","df_new\n","### 2011-2040\n","\n","\n","print(\"amp=\",calculate_amp(df_new))\n","\n","avgt,avg_rain = get_avg_weather_rain_range(df_new,2011,2040)\n","print(\"avg_t=\",avgt)\n","print(\"avg_rain=\",avg_rain)\n","print(\"=================================\")\n","avgt,avg_rain = get_avg_weather_rain_range(df_new,2041,2070)\n","print(\"avg_t=\",avgt)\n","print(\"avg_rain=\",avg_rain)\n","print(\"=================================\")\n","avgt,avg_rain = get_avg_weather_rain_range(df_new,2071,2100)\n","print(\"avg_t=\",avgt)\n","print(\"avg_rain=\",avg_rain)\n","df_new"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":638},"id":"h36FsnPkGSmd","executionInfo":{"status":"ok","timestamp":1684804153131,"user_tz":420,"elapsed":30546,"user":{"displayName":"石一锋","userId":"11386838646588379464"}},"outputId":"4e528d76-9edc-4cc0-cc89-f72716bf7d77"},"execution_count":263,"outputs":[{"output_type":"stream","name":"stdout","text":["rcp45_avg_rain= 3.0851648351648353\n","rcp45_avg_rain= 2.8324175824175826\n","rcp45_avg_rain= 2.934065934065934\n","amp= 9.151620346828635\n","avg_t= 19.63528338048736\n","avg_rain= 3.196449758145478\n","=================================\n","avg_t= 20.816478050561283\n","avg_rain= 2.8398010404307747\n","=================================\n","avg_t= 21.376832162088164\n","avg_rain= 2.9893857807794104\n"]},{"output_type":"execute_result","data":{"text/plain":["       year  day  radiation  maxt  mint  rain\n","0      2011    1        0.0  27.8  17.6   0.0\n","1      2011    2        0.0  29.3  18.0   0.0\n","2      2011    3        0.0  29.6  19.1   3.6\n","3      2011    4        0.0  29.2  19.4   0.1\n","4      2011    5        0.0  30.5  18.3   0.8\n","...     ...  ...        ...   ...   ...   ...\n","32866  2100  361       19.5  25.6  16.2   7.8\n","32867  2100  362       26.1  27.5  17.1   6.8\n","32868  2100  363       21.7  26.8  18.7   7.3\n","32869  2100  364       22.0  26.0  18.9   7.3\n","32870  2100  365       25.1  26.7  18.9  12.0\n","\n","[32871 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-fbfd30be-579b-4136-b321-6ca83b59f64e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year</th>\n","      <th>day</th>\n","      <th>radiation</th>\n","      <th>maxt</th>\n","      <th>mint</th>\n","      <th>rain</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2011</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>27.8</td>\n","      <td>17.6</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2011</td>\n","      <td>2</td>\n","      <td>0.0</td>\n","      <td>29.3</td>\n","      <td>18.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2011</td>\n","      <td>3</td>\n","      <td>0.0</td>\n","      <td>29.6</td>\n","      <td>19.1</td>\n","      <td>3.6</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2011</td>\n","      <td>4</td>\n","      <td>0.0</td>\n","      <td>29.2</td>\n","      <td>19.4</td>\n","      <td>0.1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2011</td>\n","      <td>5</td>\n","      <td>0.0</td>\n","      <td>30.5</td>\n","      <td>18.3</td>\n","      <td>0.8</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>32866</th>\n","      <td>2100</td>\n","      <td>361</td>\n","      <td>19.5</td>\n","      <td>25.6</td>\n","      <td>16.2</td>\n","      <td>7.8</td>\n","    </tr>\n","    <tr>\n","      <th>32867</th>\n","      <td>2100</td>\n","      <td>362</td>\n","      <td>26.1</td>\n","      <td>27.5</td>\n","      <td>17.1</td>\n","      <td>6.8</td>\n","    </tr>\n","    <tr>\n","      <th>32868</th>\n","      <td>2100</td>\n","      <td>363</td>\n","      <td>21.7</td>\n","      <td>26.8</td>\n","      <td>18.7</td>\n","      <td>7.3</td>\n","    </tr>\n","    <tr>\n","      <th>32869</th>\n","      <td>2100</td>\n","      <td>364</td>\n","      <td>22.0</td>\n","      <td>26.0</td>\n","      <td>18.9</td>\n","      <td>7.3</td>\n","    </tr>\n","    <tr>\n","      <th>32870</th>\n","      <td>2100</td>\n","      <td>365</td>\n","      <td>25.1</td>\n","      <td>26.7</td>\n","      <td>18.9</td>\n","      <td>12.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>32871 rows × 6 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fbfd30be-579b-4136-b321-6ca83b59f64e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-fbfd30be-579b-4136-b321-6ca83b59f64e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-fbfd30be-579b-4136-b321-6ca83b59f64e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":263}]},{"cell_type":"markdown","source":["Complement weather data for year 1980"],"metadata":{"id":"GKWS0shPSk9b"}},{"cell_type":"markdown","source":["Write generated new dataframe to the target file"],"metadata":{"id":"N9hSDcJxTQvl"}},{"cell_type":"code","source":["\n","\n","\n","######\n","target_path=\"/content/drive/MyDrive/colab_notebooks/ECS_289L/future_rcp4p5/\"\n","full_name = target_path+file_coordinates+\".met\"\n","file_object  = open(full_name, \"wt\")\n","\n","file_object.write(\"[weather.met.weather]\\n\")\n","file_object.write(\"!station number=\"+file_coordinates+\"\\n\")\n","file_object.write(\"!This climate file was created by BestiaPop on 21052023 - Taming the Climate Beast\\n\")\n","file_object.write(\"!Check our docs in https://bestiapop.readthedocs.io/en/latest/\\n\")\n","file_object.write(\"!Source: NASA POWER (https://power.larc.nasa.gov/)\\n\")\n","file_object.write(\"!Date period from: 2011 to 2100\\n\")\n","file_object.write(\"Latitude=\"+file_coordinates[0:5]+\"\\n\")\n","file_object.write(\"Longitude=\"+file_coordinates[6:]+\"\\n\")\n","\n","avgt,avg_rain = get_avg_weather_rain_range(df_new,2011,2100)\n","file_object.write(\"tav=\"+str(round(avgt, 4))+\"\\n\")\n","\n","amp_new = calculate_amp(df_new)\n","file_object.write(\"amp=\"+str(round(amp_new,5))+\"\\n\")\n","file_object.write(\"\\n\")\n","file_object.write(\"year day radn maxt mint rain\\n\")\n","file_object.write(\"() () (MJ^m2) (oC) (oC) (mm)\\n\")\n","file_object.close()\n","\n","df_new.to_csv(full_name, header=None, index=None, sep=' ', mode='a')\n","\n","\n","df_news = df_new.groupby(\"year\").size()\n","df_news = df_news.reset_index()\n","df_news"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"EljA2XjVTWN6","executionInfo":{"status":"ok","timestamp":1684804164058,"user_tz":420,"elapsed":939,"user":{"displayName":"石一锋","userId":"11386838646588379464"}},"outputId":"b04fa848-2c6b-4b5f-b901-2cea0381f39e"},"execution_count":264,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    year    0\n","0   2011  365\n","1   2012  365\n","2   2013  365\n","3   2014  366\n","4   2015  365\n","..   ...  ...\n","85  2096  365\n","86  2097  365\n","87  2098  366\n","88  2099  365\n","89  2100  365\n","\n","[90 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-393d51b0-b721-4dc3-a065-123c45477247\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year</th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2011</td>\n","      <td>365</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2012</td>\n","      <td>365</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2013</td>\n","      <td>365</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2014</td>\n","      <td>366</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2015</td>\n","      <td>365</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>85</th>\n","      <td>2096</td>\n","      <td>365</td>\n","    </tr>\n","    <tr>\n","      <th>86</th>\n","      <td>2097</td>\n","      <td>365</td>\n","    </tr>\n","    <tr>\n","      <th>87</th>\n","      <td>2098</td>\n","      <td>366</td>\n","    </tr>\n","    <tr>\n","      <th>88</th>\n","      <td>2099</td>\n","      <td>365</td>\n","    </tr>\n","    <tr>\n","      <th>89</th>\n","      <td>2100</td>\n","      <td>365</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>90 rows × 2 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-393d51b0-b721-4dc3-a065-123c45477247')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-393d51b0-b721-4dc3-a065-123c45477247 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-393d51b0-b721-4dc3-a065-123c45477247');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":264}]},{"cell_type":"code","source":["mint_sum,maxt_sum,avgt,sum_rain,avg_rain = check_temp_and_rain(df)\n","print(\"sum_max_t=\",maxt_sum,\",sum_min_t=\",mint_sum,\",avg_t=\",avgt)\n","print(\"sum_rain=\",sum_rain,\",avg_rain=\",avg_rain)\n","print(\"amp=\",calculate_amp(df))\n","df_merged = supplement_1980(df)\n","\n","mint_sum,maxt_sum,avgt,sum_rain,avg_rain = check_temp_and_rain(df_merged)\n","print(\"sum_max_t=\",maxt_sum,\",sum_min_t=\",mint_sum,\",avg_t=\",avgt)\n","print(\"sum_rain=\",sum_rain,\",avg_rain=\",avg_rain)\n","print(\"amp=\",calculate_amp(df_merged))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CaajNyBmWvZ3","executionInfo":{"status":"ok","timestamp":1684783201368,"user_tz":420,"elapsed":676,"user":{"displayName":"石一锋","userId":"11386838646588379464"}},"outputId":"b49d224e-a32f-4961-896b-042b2d3034ab"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["sum_max_t= 295946.4 ,sum_min_t= 143875.59999999998 ,avg_t= 20.070365976088347\n","sum_rain= 25798.6 ,avg_rain= 2.3545313498220315\n","amp= 9.016264848950332\n","sum_max_t= 305375.1515679454 ,sum_min_t= 148746.5515679454 ,avg_t= 20.05483585655762\n","sum_rain= 27220.084816165912 ,avg_rain= 2.404176366027726\n","amp= 9.080299316188494\n"]}]}]}